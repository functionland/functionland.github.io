"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5389],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(n),f=o,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||l;return n?r.createElement(m,a(a({ref:t},s),{},{components:n})):r.createElement(m,a({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=p;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<l;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7770:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>a,default:()=>s,frontMatter:()=>l,metadata:()=>c,toc:()=>i});var r=n(7462),o=(n(7294),n(3905));const l={},a="Build Node",c={unversionedId:"blockchain/Services/BuildNode",id:"blockchain/Services/BuildNode",title:"Build Node",description:"1- Install Rust",source:"@site/docs/blockchain/Services/BuildNode.md",sourceDirName:"blockchain/Services",slug:"/blockchain/Services/BuildNode",permalink:"/blockchain/Services/BuildNode",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Test Node",permalink:"/blockchain/Services/Node"},next:{title:"Run Node",permalink:"/blockchain/Services/RunNode"}},i=[{value:"Install OS dependencies and Rust",id:"install-os-dependencies-and-rust",children:[],level:2}],u={toc:i};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"build-node"},"Build Node"),(0,o.kt)("p",null,"1- Install Rust"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"curl https://sh.rustup.rs -sSf | sh\n\nsource ~/.bashrc\n")),(0,o.kt)("p",null,"2- Install dependencies:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo apt-get install protobuf-compiler libclang-dev build-essential\n")),(0,o.kt)("p",null,"3- Clone node repo"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git clone https://github.com/functionland/sugarfunge-node.git\n")),(0,o.kt)("p",null,"4- Enter the folder"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd ./sugarfunge-node\n")),(0,o.kt)("p",null,"5- Install wasm32"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"rustup target add wasm32-unknown-unknown\n")),(0,o.kt)("p",null,"6- Build"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cargo build --release\n")),(0,o.kt)("p",null,'Now a folder named "./target/release" is create where it contains all the compiled codes. If any error occured, your system might still be missing some dependancies. Please follow the full guide below and run step 6 again afterwards:'),(0,o.kt)("h2",{id:"install-os-dependencies-and-rust"},(0,o.kt)("a",{parentName:"h2",href:"https://github.com/functionland/sugarfunge-node/blob/main/docs/rust-setup.md"},"Install OS dependencies and Rust")))}s.isMDXComponent=!0}}]);