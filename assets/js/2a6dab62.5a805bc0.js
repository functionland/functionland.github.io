"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7738],{3905:(e,t,l)=>{l.d(t,{Zo:()=>s,kt:()=>h});var n=l(7294);function o(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function a(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function i(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?a(Object(l),!0).forEach((function(t){o(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):a(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function p(e,t){if(null==e)return{};var l,n,o=function(e,t){if(null==e)return{};var l,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(o[l]=e[l]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(o[l]=e[l])}return o}var r=n.createContext({}),u=function(e){var t=n.useContext(r),l=t;return e&&(l="function"==typeof e?e(t):i(i({},t),e)),l},s=function(e){var t=u(e.components);return n.createElement(r.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var l=e.components,o=e.mdxType,a=e.originalType,r=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=u(l),h=o,k=d["".concat(r,".").concat(h)]||d[h]||c[h]||a;return l?n.createElement(k,i(i({ref:t},s),{},{components:l})):n.createElement(k,i({ref:t},s))}));function h(e,t){var l=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=l.length,i=new Array(a);i[0]=d;var p={};for(var r in t)hasOwnProperty.call(t,r)&&(p[r]=t[r]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var u=2;u<a;u++)i[u]=l[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,l)}d.displayName="MDXCreateElement"},1298:(e,t,l)=>{l.r(t),l.d(t,{contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>p,toc:()=>r});var n=l(7462),o=(l(7294),l(3905));const a={},i="Pool",p={unversionedId:"blockchain/Recipes/Pool",id:"blockchain/Recipes/Pool",title:"Pool",description:"Create",source:"@site/docs/blockchain/Recipes/Pool.md",sourceDirName:"blockchain/Recipes",slug:"/blockchain/Recipes/Pool",permalink:"/blockchain/Recipes/Pool",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Market",permalink:"/blockchain/Recipes/Market"},next:{title:"Troubleshooting",permalink:"/functionyard/troubleshooting/"}},r=[{value:"Create",id:"create",children:[{value:"Description:",id:"description",children:[],level:3},{value:"Previous Steps:",id:"previous-steps",children:[],level:3},{value:"Steps:",id:"steps",children:[],level:3},{value:"Example Input:",id:"example-input",children:[],level:3},{value:"Expected Output:",id:"expected-output",children:[],level:3}],level:2},{value:"Join",id:"join",children:[{value:"Description:",id:"description-1",children:[],level:3},{value:"Previous Steps:",id:"previous-steps-1",children:[],level:3},{value:"Steps:",id:"steps-1",children:[],level:3},{value:"Example Input:",id:"example-input-1",children:[],level:3},{value:"Expected Output:",id:"expected-output-1",children:[],level:3}],level:2},{value:"Cancel Join",id:"cancel-join",children:[{value:"Description:",id:"description-2",children:[],level:3},{value:"Previous Steps:",id:"previous-steps-2",children:[],level:3},{value:"Steps:",id:"steps-2",children:[],level:3},{value:"Example Input:",id:"example-input-2",children:[],level:3},{value:"Expected Output:",id:"expected-output-2",children:[],level:3}],level:2},{value:"Pool Requests",id:"pool-requests",children:[{value:"Description:",id:"description-3",children:[],level:3},{value:"Previous Steps:",id:"previous-steps-3",children:[],level:3},{value:"Steps:",id:"steps-3",children:[],level:3},{value:"Example Input:",id:"example-input-3",children:[],level:3},{value:"Expected Output:",id:"expected-output-3",children:[],level:3}],level:2},{value:"Pools",id:"pools",children:[{value:"Description:",id:"description-4",children:[],level:3},{value:"Previous Steps:",id:"previous-steps-4",children:[],level:3},{value:"Steps:",id:"steps-4",children:[],level:3},{value:"Expected Output:",id:"expected-output-4",children:[],level:3}],level:2},{value:"Users",id:"users",children:[{value:"Description:",id:"description-5",children:[],level:3},{value:"Previous Steps:",id:"previous-steps-5",children:[],level:3},{value:"Steps:",id:"steps-5",children:[],level:3},{value:"Example Input:",id:"example-input-4",children:[],level:3},{value:"Expected Output:",id:"expected-output-5",children:[],level:3}],level:2},{value:"Vote",id:"vote",children:[{value:"Description:",id:"description-6",children:[],level:3},{value:"Previous Steps:",id:"previous-steps-6",children:[],level:3},{value:"Steps:",id:"steps-6",children:[],level:3},{value:"Example Input:",id:"example-input-5",children:[],level:3},{value:"Expected Output:",id:"expected-output-6",children:[],level:3}],level:2},{value:"Leave",id:"leave",children:[{value:"Description:",id:"description-7",children:[],level:3},{value:"Previous Steps:",id:"previous-steps-7",children:[],level:3},{value:"Steps:",id:"steps-7",children:[],level:3},{value:"Example Input:",id:"example-input-6",children:[],level:3},{value:"Expected Output:",id:"expected-output-7",children:[],level:3}],level:2}],u={toc:r};function s(e){let{components:t,...l}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pool"},"Pool"),(0,o.kt)("h2",{id:"create"},"Create"),(0,o.kt)("h3",{id:"description"},"Description:"),(0,o.kt)("p",null,"Allows the user to create a pool and is set as the owner of the pool"),(0,o.kt)("h3",{id:"previous-steps"},"Previous Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create an account."),(0,o.kt)("li",{parentName:"ol"},"Fund an account.")),(0,o.kt)("h3",{id:"steps"},"Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Call the fula/pool/create endpoint with the following request body:")),(0,o.kt)("h3",{id:"example-input"},"Example Input:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "seed": "//Alice",\n    "pool_name":"PoolNro1",\n    "peer_id": "PeerIdTest1",\n        "region": "Ontario"\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"seed: the seed of the account that will pay for the transaction."),(0,o.kt)("li",{parentName:"ul"},"pool_name: the name of the pool."),(0,o.kt)("li",{parentName:"ul"},"peer_id: the peer identifier")),(0,o.kt)("h3",{id:"expected-output"},"Expected Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "owner": "5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY",\n    "pool_id": 1\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"owner: the account address associated with the pool."),(0,o.kt)("li",{parentName:"ul"},"pool_id: the pool identifier.")),(0,o.kt)("h2",{id:"join"},"Join"),(0,o.kt)("h3",{id:"description-1"},"Description:"),(0,o.kt)("p",null,"Sends a request to join a pool to its members, that will vote to decide if the user is Accepted or Denied"),(0,o.kt)("h3",{id:"previous-steps-1"},"Previous Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create an account."),(0,o.kt)("li",{parentName:"ol"},"Fund an account."),(0,o.kt)("li",{parentName:"ol"},"Create a pool.")),(0,o.kt)("h3",{id:"steps-1"},"Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Call the fula/pool/join endpoint with the following request body:")),(0,o.kt)("h3",{id:"example-input-1"},"Example Input:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "seed": "//Bob",\n    "pool_id": 1,\n    "peer_id": "PeerIdBob"\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"seed: the seed of the account that wants to join and will pay for the transaction."),(0,o.kt)("li",{parentName:"ul"},"pool_id: the pool identifier."),(0,o.kt)("li",{parentName:"ul"},"peer_id: the peer identifier")),(0,o.kt)("h3",{id:"expected-output-1"},"Expected Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "pool_id": 1,\n    "account": "5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty"\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"account: the account address that requested to join the pool."),(0,o.kt)("li",{parentName:"ul"},"pool_id: the pool identifier.")),(0,o.kt)("h2",{id:"cancel-join"},"Cancel Join"),(0,o.kt)("h3",{id:"description-2"},"Description:"),(0,o.kt)("p",null,"Withdraw the latest pool request sent to the given pool by that user."),(0,o.kt)("h3",{id:"previous-steps-2"},"Previous Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create an account."),(0,o.kt)("li",{parentName:"ol"},"Fund an account."),(0,o.kt)("li",{parentName:"ol"},"Create a pool."),(0,o.kt)("li",{parentName:"ol"},"Request to join the pool.")),(0,o.kt)("h3",{id:"steps-2"},"Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Call the fula/pool/cancel_join endpoint with the following request body:")),(0,o.kt)("h3",{id:"example-input-2"},"Example Input:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "seed": "//Bob",\n    "pool_id": 1\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"seed: the seed of the account that no longer wants to join the pool."),(0,o.kt)("li",{parentName:"ul"},"pool_id: the pool identifier.")),(0,o.kt)("h3",{id:"expected-output-2"},"Expected Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "pool_id": 1,\n    "account": "5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty"\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"account: the account address that no longer wants to join the pool."),(0,o.kt)("li",{parentName:"ul"},"pool_id: the pool identifier.")),(0,o.kt)("h2",{id:"pool-requests"},"Pool Requests"),(0,o.kt)("h3",{id:"description-3"},"Description:"),(0,o.kt)("p",null,"Allows the user to get all the current pool requests (can be filtered by pool_id and account of the requester)"),(0,o.kt)("h3",{id:"previous-steps-3"},"Previous Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create an account."),(0,o.kt)("li",{parentName:"ol"},"Fund an account."),(0,o.kt)("li",{parentName:"ol"},"Create a pool."),(0,o.kt)("li",{parentName:"ol"},"Request to join the pool.")),(0,o.kt)("h3",{id:"steps-3"},"Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Call the fula/pool/poolrequests endpoint with the following request body:")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("em",{parentName:"p"},"Note: If you call the function with empty parameters: { }. This will bring all the pool requests there are."))),(0,o.kt)("h3",{id:"example-input-3"},"Example Input:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "pool_id": 1\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"pool_id: the pool identifier.")),(0,o.kt)("h3",{id:"expected-output-3"},"Expected Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "poolrequests": [\n        {\n            "pool_id": 1,\n            "account": "5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty",\n            "voted": [],\n            "positive_votes": 0,\n            "peer_id": "PeerIdBob"\n        }\n    ]\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"poolrequests: an array of all the pool requests associated with the queried parameters")),(0,o.kt)("h2",{id:"pools"},"Pools"),(0,o.kt)("h3",{id:"description-4"},"Description:"),(0,o.kt)("p",null,"Fetches all the pools that exist in the chain"),(0,o.kt)("h3",{id:"previous-steps-4"},"Previous Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create an account."),(0,o.kt)("li",{parentName:"ol"},"Fund an account."),(0,o.kt)("li",{parentName:"ol"},"Create a pool.")),(0,o.kt)("h3",{id:"steps-4"},"Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Call the fula/pool/all endpoint")),(0,o.kt)("h3",{id:"expected-output-4"},"Expected Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "pools": [\n        {\n            "pool_id": 1,\n            "creator": "5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY",\n            "pool_name": "PoolTest1",\n            "region": "Ontario",\n            "parent": null,\n            "participants": [\n                "5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY"\n            ]\n        }\n    ]\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"pools: an array of all the pools and their respective information.")),(0,o.kt)("h2",{id:"users"},"Users"),(0,o.kt)("h3",{id:"description-5"},"Description:"),(0,o.kt)("p",null,"Get all the accounts that are/were members of a pool or are requesting to be in one"),(0,o.kt)("h3",{id:"previous-steps-5"},"Previous Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create an account."),(0,o.kt)("li",{parentName:"ol"},"Fund an account."),(0,o.kt)("li",{parentName:"ol"},"Create a pool."),(0,o.kt)("li",{parentName:"ol"},"Join a pool.")),(0,o.kt)("h3",{id:"steps-5"},"Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Call the fula/pool/users endpoint with the following request body: ")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("em",{parentName:"p"},"Note: If you call the function with empty parameters: { }. This will bring all users."))),(0,o.kt)("h3",{id:"example-input-4"},"Example Input:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "pool_id": 1\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"pool_id: the pool identifier.")),(0,o.kt)("h3",{id:"expected-output-5"},"Expected Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "users": [\n        {\n            "account": "5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty",\n            "pool_id": null,\n            "request_pool_id": 1,\n            "peer_id": ""\n        },\n        {\n            "account": "5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY",\n            "pool_id": 1,\n            "request_pool_id": null,\n            "peer_id": "PeerIdTest1"\n        }\n    ]\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"users: an array of all the users and their respective information.")),(0,o.kt)("h2",{id:"vote"},"Vote"),(0,o.kt)("h3",{id:"description-6"},"Description:"),(0,o.kt)("p",null,"Allows the members of a pool to vote to accept or denied a new given member into the pool"),(0,o.kt)("h3",{id:"previous-steps-6"},"Previous Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create an account."),(0,o.kt)("li",{parentName:"ol"},"Fund an account."),(0,o.kt)("li",{parentName:"ol"},"Create a pool."),(0,o.kt)("li",{parentName:"ol"},"Join a pool."),(0,o.kt)("li",{parentName:"ol"},"Get pool requests.")),(0,o.kt)("h3",{id:"steps-6"},"Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Call the fula/pool/vote endpoint with the following request body: ")),(0,o.kt)("h3",{id:"example-input-5"},"Example Input:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "seed": "//Alice",\n    "pool_id": 1,\n    "account": "5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty",\n    "vote_value": true,\n        "peer_id": "PeerIdTest"\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"seed: the seed of the user voting."),(0,o.kt)("li",{parentName:"ul"},"pool_id: the pool identifier."),(0,o.kt)("li",{parentName:"ul"},"account: the account address of the user requesting to join."),(0,o.kt)("li",{parentName:"ul"},"vote_value: the vote of the user.")),(0,o.kt)("h3",{id:"expected-output-6"},"Expected Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "pool_id": 1,\n    "account": "5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty"\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"pool_id: the pool identifier."),(0,o.kt)("li",{parentName:"ul"},"account: the account address of the user requesting to join.")),(0,o.kt)("h2",{id:"leave"},"Leave"),(0,o.kt)("h3",{id:"description-7"},"Description:"),(0,o.kt)("p",null,"The user leaves their pool and this will also remove the storing manifests that from their latest pool if they had any"),(0,o.kt)("h3",{id:"previous-steps-7"},"Previous Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create an account."),(0,o.kt)("li",{parentName:"ol"},"Fund an account."),(0,o.kt)("li",{parentName:"ol"},"Create a pool."),(0,o.kt)("li",{parentName:"ol"},"Join a pool.")),(0,o.kt)("h3",{id:"steps-7"},"Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Call the fula/pool/leave endpoint with the following request body: ")),(0,o.kt)("h3",{id:"example-input-6"},"Example Input:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "seed": "//Bob",\n    "pool_id": 1\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"seed: the seed of the user that wants to leave the pool."),(0,o.kt)("li",{parentName:"ul"},"pool_id: the pool identifier.")),(0,o.kt)("h3",{id:"expected-output-7"},"Expected Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "pool_id": 1,\n    "account": "5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty"\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"pool_id: the pool identifier."),(0,o.kt)("li",{parentName:"ul"},"account: the account address of the user that left the pool.")))}s.isMDXComponent=!0}}]);