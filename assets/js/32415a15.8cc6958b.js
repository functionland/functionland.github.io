"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5213],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),h=a,f=d["".concat(c,".").concat(h)]||d[h]||s[h]||l;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8976:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={},o="FULA CONTRACT API",i={unversionedId:"blockchain/Services/FulaContractAPI",id:"blockchain/Services/FulaContractAPI",title:"FULA CONTRACT API",description:"This is the end point that interacts with Fula blockchain contract",source:"@site/docs/blockchain/Services/FulaContractAPI.md",sourceDirName:"blockchain/Services",slug:"/blockchain/Services/FulaContractAPI",permalink:"/blockchain/Services/FulaContractAPI",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Status",permalink:"/blockchain/Services/Status"},next:{title:"Blockchain APIs",permalink:"/blockchain/recipes"}},c=[{value:"Set up the .env file",id:"set-up-the-env-file",children:[],level:2},{value:"LAUNCH THE FULA CONTRACT API",id:"launch-the-fula-contract-api",children:[],level:2},{value:"Available endpoints",id:"available-endpoints",children:[{value:"Read endpoints",id:"read-endpoints",children:[],level:3},{value:"Write endpoints",id:"write-endpoints",children:[],level:3}],level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"fula-contract-api"},"FULA CONTRACT API"),(0,a.kt)("p",null,"This is the end point that interacts with Fula blockchain contract"),(0,a.kt)("h2",{id:"set-up-the-env-file"},"Set up the .env file"),(0,a.kt)("p",null,"Using the .env.example create the .env file and fill the needed values"),(0,a.kt)("h2",{id:"launch-the-fula-contract-api"},"LAUNCH THE FULA CONTRACT API"),(0,a.kt)("p",null,"Run the following command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cargo run\n")),(0,a.kt)("h2",{id:"available-endpoints"},"Available endpoints"),(0,a.kt)("p",null,"Health: Verifies that the API is running"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'path: "health"\n')),(0,a.kt)("h3",{id:"read-endpoints"},"Read endpoints"),(0,a.kt)("p",null,"Supply: Consult the total supply of the token"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'paths: "goerli/supply", "mumbai/supply"\n    \n')),(0,a.kt)("p",null,"Allowance: Consult the current allowance of the given accounts"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'paths: "goerli/allowance", "mumbai/allowance"\n')),(0,a.kt)("h3",{id:"write-endpoints"},"Write endpoints"),(0,a.kt)("p",null,"Mint: Mint tokens to the given account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'paths: "goerli/mint", "mumbai/mint"\n')),(0,a.kt)("p",null,"Burn: Burn tokens from the given account if the necessary allowance"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'paths: "goerli/burn", "mumbai/burn"\n')),(0,a.kt)("p",null,"Transfer: Transfer the tokens from the given account if the necessary allowance"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'paths: "goerli/transfer", "mumbai/transfer"\n')),(0,a.kt)("p",null,"Increase_allowance: Increase the amount of tokens to be able to burn or transfer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'paths: "goerli/increase_allowance", "mumbai/increase_allowance"\n')),(0,a.kt)("p",null,"Decrease_allowance: Decrease the amount of tokens to be able to burn or transfer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'paths: "goerli/decrease_allowance", "mumbai/decrease_allowance"\n')))}u.isMDXComponent=!0}}]);