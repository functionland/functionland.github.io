"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5389],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=u(t),f=o,m=d["".concat(i,".").concat(f)]||d[f]||p[f]||l;return t?r.createElement(m,a(a({ref:n},s),{},{components:t})):r.createElement(m,a({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,a=new Array(l);a[0]=d;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<l;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7770:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return s},default:function(){return d}});var r=t(7462),o=t(3366),l=(t(7294),t(3905)),a=["components"],c={},i="Build Node",u={unversionedId:"blockchain/Services/BuildNode",id:"blockchain/Services/BuildNode",title:"Build Node",description:"1- Install Rust",source:"@site/docs/blockchain/Services/BuildNode.md",sourceDirName:"blockchain/Services",slug:"/blockchain/Services/BuildNode",permalink:"/blockchain/Services/BuildNode",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Test Node",permalink:"/blockchain/Services/Node"},next:{title:"Run Node",permalink:"/blockchain/Services/RunNode"}},s=[{value:"Install OS dependencies and Rust",id:"install-os-dependencies-and-rust",children:[],level:2}],p={toc:s};function d(e){var n=e.components,t=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"build-node"},"Build Node"),(0,l.kt)("p",null,"1- Install Rust"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"curl https://sh.rustup.rs -sSf | sh\n\nsource ~/.bashrc\n")),(0,l.kt)("p",null,"2- Install dependencies:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo apt-get install protobuf-compiler libclang-dev build-essential\n")),(0,l.kt)("p",null,"3- Clone node repo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"git clone https://github.com/functionland/sugarfunge-node.git\n")),(0,l.kt)("p",null,"4- Enter the folder"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"cd ./sugarfunge-node\n")),(0,l.kt)("p",null,"5- Install wasm32"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"rustup target add wasm32-unknown-unknown\n")),(0,l.kt)("p",null,"6- Build"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"cargo build --release\n")),(0,l.kt)("p",null,'Now a folder named "./target/release" is create where it contains all the compiled codes. If any error occured, your system might still be missing some dependancies. Please follow the full guide below and run step 6 again afterwards:'),(0,l.kt)("h2",{id:"install-os-dependencies-and-rust"},(0,l.kt)("a",{parentName:"h2",href:"https://github.com/functionland/sugarfunge-node/blob/main/docs/rust-setup.md"},"Install OS dependencies and Rust")))}d.isMDXComponent=!0}}]);