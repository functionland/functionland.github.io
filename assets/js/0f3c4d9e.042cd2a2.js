"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7648],{3905:function(e,r,n){n.d(r,{Zo:function(){return s},kt:function(){return f}});var t=n(7294);function l(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){l(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,l=function(e,r){if(null==e)return{};var n,t,l={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(l[n]=e[n]);return l}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=t.createContext({}),u=function(e){var r=t.useContext(i),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},s=function(e){var r=u(e.components);return t.createElement(i.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,l=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=u(n),f=l,h=d["".concat(i,".").concat(f)]||d[f]||p[f]||o;return n?t.createElement(h,a(a({ref:r},s),{},{components:n})):t.createElement(h,a({ref:r},s))}));function f(e,r){var n=arguments,l=r&&r.mdxType;if("string"==typeof e||l){var o=n.length,a=new Array(o);a[0]=d;var c={};for(var i in r)hasOwnProperty.call(r,i)&&(c[i]=r[i]);c.originalType=e,c.mdxType="string"==typeof e?e:l,a[1]=c;for(var u=2;u<o;u++)a[u]=n[u];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1310:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return s},default:function(){return d}});var t=n(7462),l=n(3366),o=(n(7294),n(3905)),a=["components"],c={},i="Explorer",u={unversionedId:"blockchain/Services/Explorer",id:"blockchain/Services/Explorer",title:"Explorer",description:"Install NodeJS",source:"@site/docs/blockchain/Services/Explorer.md",sourceDirName:"blockchain/Services",slug:"/blockchain/Services/Explorer",permalink:"/blockchain/Services/Explorer",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Blockchain Services",permalink:"/blockchain/services"},next:{title:"Test Node",permalink:"/blockchain/Services/Node"}},s=[{value:"Install NodeJS",id:"install-nodejs",children:[],level:2},{value:"Install Yarn",id:"install-yarn",children:[],level:2},{value:"Clone the Explorer",id:"clone-the-explorer",children:[],level:2},{value:"Run the Explorer",id:"run-the-explorer",children:[],level:2},{value:"Install Docker",id:"install-docker",children:[],level:2},{value:"Build the image",id:"build-the-image",children:[{value:"Run the Explorer",id:"run-the-explorer-1",children:[],level:3}],level:2}],p={toc:s};function d(e){var r=e.components,n=(0,l.Z)(e,a);return(0,o.kt)("wrapper",(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"explorer"},"Explorer"),(0,o.kt)("h1",{id:"compile-from-source"},"Compile from Source"),(0,o.kt)("h2",{id:"install-nodejs"},(0,o.kt)("a",{parentName:"h2",href:"https://nodejs.org/en/"},"Install NodeJS")),(0,o.kt)("h2",{id:"install-yarn"},(0,o.kt)("a",{parentName:"h2",href:"https://classic.yarnpkg.com/lang/en/docs/install"},"Install Yarn")),(0,o.kt)("h2",{id:"clone-the-explorer"},"Clone the Explorer"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/functionland/sugarfunge-explorer.git\n")),(0,o.kt)("h2",{id:"run-the-explorer"},"Run the Explorer"),(0,o.kt)("p",null,"Requires a ",(0,o.kt)("a",{parentName:"p",href:"/blockchain/Services/Node"},"Node")," running."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn\nWS_URL=ws://127.0.0.1:9944 yarn start\n")),(0,o.kt)("h1",{id:"using-docker"},"Using Docker"),(0,o.kt)("h2",{id:"install-docker"},(0,o.kt)("a",{parentName:"h2",href:"https://docs.docker.com/engine/install/"},"Install Docker")),(0,o.kt)("h2",{id:"build-the-image"},"Build the image"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker build -t sugarfunge-explorer:local -f docker/Dockerfile .\n")),(0,o.kt)("h3",{id:"run-the-explorer-1"},"Run the Explorer"),(0,o.kt)("p",null,"Requires a ",(0,o.kt)("a",{parentName:"p",href:"/blockchain/Services/Node"},"Node")," running."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -d --network host --env WS_URL=ws://127.0.0.1:9944 sugarfunge-explorer:local\n")),(0,o.kt)("h1",{id:"functionyard-network"},"Functionyard Network"),(0,o.kt)("p",null,"If you want to run an explorer for functionyard network:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm --name Explorer --network host --env WS_URL=wss://node.functionyard.fx.land --env WSS_URL=wss://node.functionyard.fx.land sugarfunge-explorer:local\n")),(0,o.kt)("p",null,"Or set it as a service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/system/docker-sugarfunge-explorer.service\n")),(0,o.kt)("p",null,"And fill it with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"[Unit]\nDescription=Docker Sugarfunge Explorer\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nTimeoutStartSec=0\nType=simple\nExecStart=/usr/bin/docker run --rm --name Explorer --network host --env WS_URL=wss://node.functionyard.fx.land --env WSS_URL=wss://node.functionyard.fx.land sugarfunge-explorer:local\nExecStop=/usr/bin/docker stop Explorer\nRestart=always\nStandardOutput=file:/var/log/Explorer.log\nStandardError=file:/var/log/Explorer.err\n\n[Install]\nWantedBy=multi-user.target\n")))}d.isMDXComponent=!0}}]);